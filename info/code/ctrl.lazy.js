"use strict";!function(){function ContentToggle(){}function ClientsTable(){this.clean()}function initNavigation($scope){$scope.ipv4ipv6Toggle=(new ContentToggle).initializeState("ipv4").select(["selected"]).unselect(["unselected"]).addHandler("selectIpv4Table","ipv4").addHandler("selectIpv6Table","ipv6"),$scope.infoToggle=(new ContentToggle).initializeState("internetInfo").select(["icon-selected"]).unselect(["icon"]).addHandler("showInternetInfo","internetInfo").addHandler("showRouterInfo","routerInfo").addHandler("showClientsInfo","clientsInfo"),$scope.info={},$scope.info.sigLevelFlag=!0,$scope.isInternetConnected=function(){return $scope.info.wan?"connected"===$scope.info.wan.ipv4.networkStatus||"connected"===$scope.info.wan.ipv6.networkStatus:!1}}function readWifiInfo(wifi_general){if(wifi_general){var wifi={};return _.each(["f24","f5"],function(frequency){wifi[frequency]={exists:wifi_general[frequency].exists,status:wifi_general[frequency].radio,ssid:wifi_general[frequency].ssid,password:wifi_general[frequency].WPAPSK,authMode:wifi_general[frequency].authMode}}),wifi}}function readLanInfo(lanInfo){var lan={ipv4:{},ipv6:{}};return lanInfo&&(lan.ipv4.mac=lanInfo.mac,lan.ipv4.ip=lanInfo.ip,lan.ipv4.mask=lanInfo.mask,lanInfo.ipv6&&(lan.ipv6.ip=lanInfo.ipv6.split("/")[0],lan.ipv6.assignedPrefix=lanInfo.ipv6.split("/")[1])),lan}function readWanInfo(wanInfo,ipv4gw,ipv6gw,apClient,dns,dnsv6){var wanIpv4,servers,wanIpv6,wan={ipv4:{},ipv6:{},dns:{},sigLevelFlag:!1};if(ipv4gw){if("Connected"!=ipv4gw.status&&(ipv4gw.gateway=null,ipv4gw.ip=null,ipv4gw.mask=null,ipv4gw.dns_primary=null,ipv4gw.dns_secondary=null),wan.ipv4.connectionType=ipv4gw.contype,wan.ipv4.networkStatus=getWanStatus(ipv4gw.status),wanInfo?(wanIpv4=_.find(wanInfo[104],function(x){return x.ip==ipv4gw.ip}),wan.ipv4.connectionUptime=wanIpv4?getUptimePrepared(wanIpv4.duration_s):getUptimePrepared(),"lte"==ipv4gw.contype&&"undefined"!=typeof wanInfo[134]&&(wanInfo[134].percent&&(wan.ipv4.signal=wanInfo[134].percent,wan.sigLevelFlag=wanInfo.sigLevelFlag?!1:!0),wan.ipv4.imei=wanInfo[134].imei,wan.ipv4.imsi=wanInfo[134].imsi,wan.ipv4.operator=wanInfo[134].operator,wan.ipv4.mcc=wanInfo[134].MCC,wan.ipv4.mnc=wanInfo[134].MNC,wan.ipv4.cellid=wanInfo[134].cellid,wan.ipv4.rssi=wanInfo[134].rssi,wan.ipv4.simStatus=wanInfo[135]&&"undefined"!=typeof wanInfo[135].pinstatus?"usb_modem_basic_sim_connected":"usb_modem_basic_sim_not_connected")):wan.ipv4.connectionUptime=getUptimePrepared(),wan.ipv4.mac=ipv4gw.mac,wan.ipv4.ip=ipv4gw.ip,wan.ipv4.gateway=ipv4gw.gateway,dns&&dns.manual){var servers=dns.servers.split("|");wan.ipv4.primaryDnsServer=servers[0],wan.ipv4.secondaryDnsServer=servers[1]}else wan.ipv4.primaryDnsServer=ipv4gw.dns_primary,wan.ipv4.secondaryDnsServer=ipv4gw.dns_secondary;wan.ipv4.mask=ipv4gw.mask}else wan.ipv4.connectionUptime=getUptimePrepared(),wan.ipv4.networkStatus="apps_hq_admin_conn_not_created";return ipv6gw?("Connected"!=ipv6gw.status&&(ipv6gw.gatewayv6=null,ipv6gw.ipv6=null,ipv6gw.dns_primaryv6=null,ipv6gw.dns_secondaryv6=null),wan.ipv6.connectionType=ipv6gw.contype,wan.ipv6.networkStatus="Connecting"==ipv6gw.status?getWanV6Status(wanInfo[272]?wanInfo[272].wanv6_status:ipv6gw.status):getWanStatus(ipv6gw.status),wanInfo?(wanIpv6=_.find(wanInfo[104],function(x){return x.is_wan===!0&&x.ipv6&&x.ipv6==ipv6gw.ipv6}),wan.ipv6.connectionUptime=wanIpv6?getUptimePrepared(wanIpv6.duration_s):getUptimePrepared(),"Connecting"==ipv6gw.status&&"wifi"==ipv6gw.ifacetype&&(wan.ipv6.networkStatus=getWanStatus(apClient.ApCliConnect?"DHCPIPNotReceived":"WiFiDisconnected"))):wan.ipv6.connectionUptime=getUptimePrepared(),wan.ipv6.ip=ipv6gw.ipv6,wan.ipv6.gateway=ipv6gw.gatewayv6,dnsv6&&dnsv6.manual?(servers=dnsv6.servers.split("|"),wan.ipv6.primaryDnsServer=servers[0],wan.ipv6.secondaryDnsServer=servers[1]):(wan.ipv6.primaryDnsServer=ipv6gw.dns_primaryv6,wan.ipv6.secondaryDnsServer=ipv6gw.dns_secondaryv6)):(wan.ipv6.connectionUptime=getUptimePrepared(),wan.ipv6.networkStatus="apps_hq_admin_conn_not_created"),wan}function getWanStatus(status){var key=null;switch(status){case"Disabled":key="st_disabled";break;case"Connected":key="connected";break;case"kabinet_not_started":case"Disconnected":key="disconnected";break;default:status=status.replace(/PPP|WiFi|DHCP|IP|SIM/g,function(i){return i[0]+i.slice(1).toLowerCase()}),key="wan_status_"+status.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()}return key}function getWanV6Status(status){var key=null;switch(status){case 0:key="connected";break;case 1:key="wan_status_dual_stack_ppp_error";break;case 2:key="wan_status_no_address";break;case 3:key="wan_status_no_delegated_prefix";break;default:key="unknown"}return key}function getUptimePrepared(s){var result={};return result.d=s/86400|0,result.h=formatTimeElement(s%86400/3600|0),result.m=formatTimeElement(s%3600/60|0),result.s=formatTimeElement(s%60|0),result}function formatTimeElement(n){return n>9?n:"0"+n}angular.module("app").controllerProvider.register("HomeCtrl",["$scope","$rootScope","ngDialog","translate","snackbars",function($scope,$rs,ngDialog,translate,snackbars){function updateWithMessage(cb){var overlayId=$rs.overlay.circular.start();push(function(err){return err?($rs.overlay.circular.stop(overlayId),void snackbars.add("msg_rpc_write_error")):(snackbars.add("msg_rpc_write_success"),pull(cb),void $rs.overlay.circular.stop(overlayId))})}function getOnNetworks(list){return _.chain(list).mapObject(function(band){return _.extend({},band,{List:_.pick(band.List,function(item){return item.Enable})})}).pick(function(band){return _.size(band.List)}).value()}function pull(cb){wifiMacFilter.pull(function(){var data=wifiMacFilter.data();$scope.networksFullList=data.Networks,$scope.networks=getOnNetworks(data.Networks),$scope.rules=data.Rules,$scope.maxRulesCount=data.MaxRulesCount,cb&&cb(),$scope.isReady=!0,$scope.$emit("pageload")})}function push(cb){wifiMacFilter.push(cb)}function getFilterPrototype(mac,hostname,ssid,band,network){var Band,dataNetworks,dataNetvorks,Network,deny,isOff=!1;return band||network||!ssid?(Band=band,Network=network,band&&network?(deny="deny"==wifiMacFilter.data().Networks[band].List[network].AccessPolicy,isOff="off"==wifiMacFilter.data().Networks[band].List[network].AccessPolicy):(dataNetvorks=getOnNetworks(wifiMacFilter.data().Networks),Band=_.keys(dataNetvorks)[0]||"1",Network=dataNetvorks[Band]&&_.keys(dataNetvorks[Band].List)[0]||"1")):(dataNetworks=wifiMacFilter.data().Networks,_.each(dataNetworks,function(networks,bandId){var listNetwork=networks.List;_.each(listNetwork,function(wifi,inx){wifi.SSID==ssid&&(deny="deny"==wifi.AccessPolicy?!0:!1,"off"==wifi.AccessPolicy&&(isOff=!0),Band=bandId,Network=inx)})})),{Enable:!0,MAC:mac||"",Hostname:hostname||"",ssid:ssid||"",Band:Band,Network:Network,deny:deny,off:isOff}}function openDialog(item,inx,isNew){ngDialog.open({template:"dialogs/wifi_mac_edit_simple/dialog.tpl.html",className:"wifi_mac_edit_dialog",controller:WifiMacEditSimpleDialogCtrl,data:{rule:item,inx:inx,isNew:isNew},scope:$scope})}function readClientsTable(connectedWifiCleints,rules){var clientsTable=new ClientsTable;return $scope.info.connectedClients=0,_.isEmpty(rules)||clientsTable.extend(readClientsByRules(rules)),connectedWifiCleints&&_.each(connectedWifiCleints,function(client){var selectedClient,addClient=getFilterPrototype(client.mac,client.hostname,client.SSID),existingClient=$scope.getRuleIndexByMacBandNetwork(rules,addClient.MAC,addClient.Band,addClient.Network);existingClient?(selectedClient=clientsTable.find(addClient.MAC,addClient.Band,addClient.Network),null!=selectedClient?selectedClient.online=!0:clientsTable.add(addClient)):(addClient.online=!0,addClient.enable=!1,$scope.info.connectedClients+=1,clientsTable.add(addClient))}),clientsTable.add({isClientAddTag:!0}),clientsTable.filter($scope.networks),clientsTable.items=_.flatten(clientsTable.rows),clientsTable}function readClientsByRules(rules){var clients=[];return _.each(rules,function(rule){var newClient={};newClient.MAC=rule.MAC,newClient.Hostname=rule.Hostname,newClient.enable=rule.Enable,newClient.Band=rule.Band,newClient.Network=rule.Network,newClient.deny="deny"==wifiMacFilter.data().Networks[rule.Band].List[rule.Network].AccessPolicy,clients.push(newClient)}),clients}initNavigation($scope);var devinfo=$scope.devinfo,areasAndRpc=["104|187|64|272","wifi_general|net|version|notice|134|135|7|132"].join("|"),wifiMacFilter=$scope.device.wifiMacFilter;$scope.update=updateWithMessage,pull(),devinfo.init({min_interval:4,timeout:1e4}),devinfo.onceAndSubscribe(areasAndRpc,function(response){if(response&&!(Object.keys(response).length<=1)){$scope.info.modelName=response.modelName,$scope.info.wifi=readWifiInfo(response.wifi_general),$scope.info.isAPMode="ap"==response.deviceMode,$scope.info.clientsTable=readClientsTable(response[64],$scope.rules),response[104]&&(lan=response[104].br0,_.find(response[104],function(x){return x.is_wan===!0})),$scope.info.lan=readLanInfo(lan);var lan,rpc272=response[272]?response[272]:null,wanInfo=readWanInfo({272:rpc272,104:response[104],134:response[134],135:response[135],7:response[7],sigLevelFlag:$scope.info.sigLevelFlag},response.ipv4gw,response.ipv6gw,response.apClient,response[7],response[132]);$scope.info.wan=wanInfo,$scope.info.sigLevelFlag=wanInfo.sigLevelFlag,$scope.isActivated||($scope.isActivated=!0,$scope.overlay.preloader.stop(),$scope.info.isAPMode&&$scope.infoToggle.showRouterInfo())}},$scope),$scope.isMoreThanOneBand=function(){return $scope.info.wifi&&$scope.info.wifi.f5.exists},$scope.isEmptyNetwork=function(){return!$scope.networks||0===_.size($scope.networks)},$scope.getRuleByMac=function(mac){return _.find($scope.rules,function(rule){return rule.MAC.toUpperCase()===mac.toUpperCase()})},$scope.getRuleIndexByMacAndSsid=function(mac,ssid){return _.findKey($scope.rules,function(rule){return rule.MAC.toUpperCase()===mac.toUpperCase()&&void 0!=rule.ssid&&rule.ssid==ssid})},$scope.getRuleIndexByMac=function(mac){return _.findKey($scope.rules,function(rule){return rule.MAC.toUpperCase()===mac.toUpperCase()})},$scope.getRuleIndexByMacBandNetwork=function(rules,mac,band,network){return _.findKey(rules,function(rule){return rule.MAC.toUpperCase()===mac.toUpperCase()&&rule.Band==band&&rule.Network==network})},$scope.addClient=function(){var msgMaxRules;!$scope.maxRulesCount||_.size($scope.rules)<$scope.maxRulesCount?openDialog(getFilterPrototype(),-1,!0):(msgMaxRules=translate("wifi_mac_max_rules_message").replace(/<MAX_RULES>/,$scope.maxRulesCount),alert(msgMaxRules))},$scope["delete"]=function(client){var indexOfExistedRule=$scope.getRuleIndexByMac(client.MAC);indexOfExistedRule&&(wifiMacFilter.cut(indexOfExistedRule),updateWithMessage())},$scope.edit=function(client){var indexOfExistedRule;if(client.Band&&client.Network)var indexOfExistedRule=$scope.getRuleIndexByMacBandNetwork($scope.rules,client.MAC,client.Band,client.Network);else indexOfExistedRule=$scope.getRuleIndexByMacAndSsid(client.MAC,client.ssid);indexOfExistedRule?openDialog(getFilterPrototype(client.MAC,client.Hostname,client.ssid,client.Band,client.Network),indexOfExistedRule,!1):openDialog(getFilterPrototype(client.MAC,client.Hostname,client.ssid,client.Band,client.Network),-1,!0)},$scope.getIpv6=function(){return $scope.info.wan.ipv6.ip||translate("unknown")}}]),ContentToggle.prototype.initializeState=function(state){return this.state=state,this},ContentToggle.prototype.addHandler=function(name,state){return this[name]=function(){this.state=state},this},ContentToggle.prototype.select=function(classes){return this.selected=classes,this},ContentToggle.prototype.unselect=function(classes){return this.unselected=classes,this},ClientsTable.prototype.clean=function(){this.length=0,this.rows=[[]]},ClientsTable.prototype.add=function(client){0!==this.length&&this.length%3===0&&this.rows.push([]),this.rows[this.rows.length-1].push(client),this.length++},ClientsTable.prototype.extend=function(clients){var i,len;for(i=0,len=clients.length;len>i;i++)this.add(clients[i])},ClientsTable.prototype.find=function(mac,band,network){var finded=null;return _.each(this.rows,function(row){_.each(row,function(client){mac.toUpperCase()===client.MAC.toUpperCase()&&(band?band==client.Band&&(network?network==client.Network&&(finded=client):finded=client):finded=client)})}),finded},ClientsTable.prototype.filter=function(networkList){var networkList=_.pick(networkList,function(network){return _.some(network.List,function(item){return item.Enable})}),listClient=_.flatten(this.rows,!0);this.clean(),_.each(listClient,function(client){this.add(client)},this)}}();